{"version":3,"file":"bundle.js","sources":["../../../../../../frontend/node_modules/svelte/internal/index.mjs","../../../../../../frontend/src/Footer.svelte","../../../../../../frontend/src/Header.svelte","../../../../../../frontend/src/Step.svelte","../../../../../../frontend/src/Main.svelte","../../../../../../frontend/src/App.svelte","../../../../../../frontend/src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<footer\r\n    class=\"py-20 sm:py-32 bg-black border-t border-solid border-violet-950\r\nflex flex-col gap-4 sm:gap-8 justify-center items-center\"\r\n>\r\n    <p class=\"px-4 py-2 bg-white text-slate-950 font-medium\">\r\n        Connect with us &darr;\r\n    </p>\r\n    <div class=\"flex flex-col gap-4 items-center justify-center\">\r\n        <p>\r\n            <b class=\"pr-2\">GitHub</b>\r\n            <a class=\"text-violet-400\" target=\"_blank\" href=\"https://github.com/JM-world/aisaProj\">\r\n                JM-world/aisaProj<sup\r\n                    ><span class=\"text-xs scale-75 pl-0.5\">\r\n                        <i\r\n                            class=\"fa-solid fa-arrow-up-right-from-square\r\n                            text-xs scale-[75%]\"\r\n                        ></i>\r\n                    </span></sup\r\n                >\r\n            </a>\r\n        </p>\r\n    </div>\r\n</footer>\r\n","<script>\r\n    export let y;\r\n\r\n    let tabs = [\r\n        { name: \"About Project\", link: \"#projects\" },\r\n        { name: \"Nudge X Public Data\", link: \"#nudge\" },\r\n        { name: \"Spring X Maria DB\", link: \"#spring\" },\r\n        { name: \"GPT-4 X FAST API\", link: \"#gpt4\" },\r\n        // {name: 'Projecs', '#projects'}\r\n    ];\r\n</script>\r\n\r\n<header\r\n    class={\"sticky z-[10] top-0 duration-200 px-6 flex items-center justify-between border border-solid \" +\r\n        (y > 0\r\n            ? \" py-4 bg-slate-950 border-violet-950\"\r\n            : \" py-4 bg-slate-950 border-transparent\")}\r\n>\r\n    <a href=\"#introPage\">\r\n        <h1 class=\"font-medium\">\r\n            <b class=\"font-bold poppins\">ASIA Edu X</b> LG U+\r\n        </h1>\r\n    </a>\r\n    <div class=\"sm:flex ml-auto pr-4 items-center gap-4 hidden\">\r\n        {#each tabs as tab, index}\r\n            <a href={tab.link} class=\"duration-200 hover:text-violet-400\">\r\n                <p>{tab.name}</p>\r\n            </a>\r\n        {/each}\r\n    </div>\r\n    <a\r\n        href=\"/admin/login\"\r\n        class=\"blueShadow relative overflow-hidden px-5 py-2 group rounded-full bg-white text-slate-950\"\r\n    >\r\n        <div\r\n            class=\"absolute top-0 right-full w-full h-full bg-violet-400 opacity-20 group-hover:translate-x-full z-0 duration-200\"\r\n        ></div>\r\n        <h4 class=\"relative z-9\">Go to Admin</h4>\r\n    </a>\r\n</header>\r\n","<script>\r\n    export let step;\r\n</script>\r\n\r\n<a\r\n    href={step.href}\r\n    class=\"p-4 sm:p-6 md:p-8 flex flex-col\r\ngap-4 rounded-lg border border-solid border-violet-700 text-center group\r\ncursor-pointer hover:border-violet-400 duration-200\"\r\n>\r\n    <div\r\n        class=\"bg-slate-950 grid place-items-center px-4 text-5xl md:text-6xl\r\n    -mt-10 sm:-mt-12 md:-mt-14 lg:-mt-16 mx-auto duration-200\"\r\n    >\r\n        <i class={step.icon}></i>\r\n    </div>\r\n    <h3 class=\"font-medium text-xl sm:text-2xl md:text-3xl\">{step.name}</h3>\r\n    <slot />\r\n    <div class=\"flex-1 flex justify-between gap-4 items-center\">\r\n        <div\r\n            class=\"ml-auto cursor-pointer hover:text-slate-950 duration-200\r\n        relative after:absolute after:top-0 after:right-full\r\n        after:w-full after:h-full after:bg-white after:duration-200\r\n        hover:after:translate-x-full after:z-[-1] overflow-hidden\"\r\n        >\r\n            <p class=\"relative z-4\">바로 가기 &rarr;</p>\r\n        </div>\r\n    </div>\r\n</a>\r\n","<script>\r\n    import Step from \"./Step.svelte\";\r\n    import { onMount } from 'svelte';\r\n    // import WordCloud from \"svelte-d3-cloud\";\r\n\r\n    onMount(() => {\r\n        hljs.highlightAll(); // 모든 코드 블록을 강조 표시   \r\n    });\r\n\r\n    // const words = [\r\n    // { text: \"AI\", count: 100 },\r\n    // { text: \"설문\", count: 80 },\r\n    // { text: \"응답율\", count: 50 },\r\n    // { text: \"웹/앱\", count: 75 },\r\n    // { text: \"Nudge\", count: 90 },\r\n    // { text: \"개인정보\", count: 75 },\r\n    // { text: \"불성실 응답\", count: 75 },\r\n    // ];\r\n\r\n\r\n    const securityAdmin = `@Configuration\r\n@EnableWebSecurity\r\npublic class SecurityConfig {\r\n\t@Bean\r\n\tSecurityFilterChain filterChain(HttpSecurity http) throws Exception {\r\n\t\thttp\r\n\t\t.authorizeHttpRequests((authorizeHttpRequests) -> authorizeHttpRequests\r\n\t\t\t\t.requestMatchers(new AntPathRequestMatcher(\"/**\")).permitAll());\r\n\t\t\r\n\t\treturn http.build();\r\n\t}\r\n\t\r\n\t@Bean\r\n\tPasswordEncoder passwordEncoder() {\r\n\t\treturn new BCryptPasswordEncoder();\r\n\t}`;\r\n\r\n    const postMapping = `\r\n@RequiredArgsConstructor\r\n@Controller\r\npublic class MainController {\r\n\tprivate final QuestionRepository questionRepository;\r\n\tprivate final AnswerService answerService;\r\n\t\r\n\t// 첫번째 [시작화면]\r\n\t@GetMapping(\"/\")\r\n\tpublic String main(HttpSession session) {\r\n\t\tsession.invalidate();\r\n\t\treturn \"main\";\r\n\t}\r\n\t....\r\n\t// 세번째 [설문화면]\r\n\t@GetMapping(\"/survey/{page}\")\r\n\tpublic String getQuestionSetById(@PathVariable(\"page\") int page, Model model) {\r\n\t\t// 시작 시간 체크\r\n\t\tstime = Instant.now();\r\n\t\t\r\n\t    List<Question> questionList = new ArrayList<>();\r\n\t    if (page == 1) {\r\n\t    \tquestionList = this.questionRepository.findByQuestionIdBetween(1, 6);\r\n\t\t} else if (page == 2) {\r\n\t        questionList = this.questionRepository.findByQuestionIdBetween(7, 15);\r\n\t    } else if (page == 3) {\r\n\t        questionList = this.questionRepository.findByQuestionIdBetween(16, 21);\r\n\t    }\r\n\t    \r\n\t    // 현재 사용자가 표시할 질문 세트를 모델에 추가합니다.\r\n\t    page += 1;\r\n\t    model.addAttribute(\"page\", page);\r\n\t    model.addAttribute(\"questionList\", questionList);\r\n\t    if (page == 4) {\r\n\t    \tpage = 2;\r\n\t    }\r\n\t    // survey.html은 질문 세트를 표시하는 템플릿 파일입니다.\r\n\t    return \"survey\";\r\n\t}\r\n.....   \r\n        // parameter setting\r\n        String apiUrl = \"http://192.168.0.50:8000/create/answer\";\r\n        URI uri = new URI(apiUrl);\r\n        \r\n        HashMap<String, Integer> body = new HashMap<>();\r\n        body.put(\"userId\", this.sessionId);\r\n\t\t\r\n        for (int k = i; k <= j; k++) {\r\n        \tString answerString = answers.get(\"answers[\" + k + \"]\");\r\n    \t\tbody.put(\"Q\" + k, Integer.parseInt(answerString));\r\n    \t}\r\n\t        \r\n\t\tbody.put(\"elapsedTime\", elapsedTime);\r\n\t\t\r\n        // body.put(\"uid\", uid); 등 정보를 계속 보낼 수 있음\r\n        HttpEntity<HashMap<String, Integer>> entity = new HttpEntity<>(body, new HttpHeaders());\r\n\r\n        // 정보를 주고 받음\r\n        RestTemplate rest = new RestTemplate();\r\n        ResponseEntity<String> response = rest.exchange(uri, HttpMethod.POST, entity, String.class);\r\n\t    JSONParser json = new JSONParser();\r\n\t    JSONObject obj = (JSONObject) json.parse(response.getBody().toString());\r\n\t    model.addAttribute(\"obj\", obj.get(\"Answer\").toString());\r\n\t    System.out.println(obj.get(\"Answer\").toString());\r\n\t    this.obj = obj.get(\"Answer\").toString();\r\n\t   ....\r\n\t}\r\n}`\r\n\r\n    const jpaMaria = `@RequiredArgsConstructor\r\n@Service\r\npublic class AdminService {\r\n\t\r\n\tprivate final AdminRepository adminRepository;\r\n\t\r\n\tprivate final PasswordEncoder passwordEncoder;\r\n\t\r\n\tpublic Admin create(String name, String password) {\r\n\t\tAdmin admin = new Admin();\r\n\t\tadmin.setName(name);\r\n\t\tadmin.setPassword(passwordEncoder.encode(password));\r\n\t\t\r\n\t\tthis.adminRepository.save(admin);\r\n\t\treturn admin;\r\n\t}\r\n}\r\n\r\npublic interface AdminRepository extends JpaRepository<Admin, Integer>{\r\n\r\n}`;\r\n\r\n    const svelteJava = `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\r\n        <scrip t src=\"https://cdn.tailwindcss.com\"></scrip t>\r\n        <title>Svelte app</title>\r\n        <link\r\n            rel=\"stylesheet\"\r\n            href=\"../static/dist/build/bundle.css\"\r\n            th:href=\"@{/dist/build/bundle.css}\"\r\n        />\r\n    </head>\r\n    <body data-sveltekit-preload-data=\"hover\" class=\"bg-slate-950 text-white relative\">\r\n        <div style=\"display: contents\" class=\"relative z-[1]\">\r\n            <scrip t\r\n                defer\r\n                src=\"../static/dist/build/bundle.js\"\r\n                th:src=\"@{/dist/build/bundle.js}\"\r\n            ></scrip t>\r\n        </div>\r\n    </body>\r\n</html>`;\r\n\r\n    const fastApi = `# fast api 사용 모듈\r\nfrom fastapi import FastAPI\r\nfrom starlette.middleware.cors import CORSMiddleware\r\n\r\n# prisma 사용 모듈\r\nimport asyncio\r\nfrom prisma import Prisma\r\nfrom typing import Optional\r\nfrom pydantic import BaseModel\r\n    \r\n# 넛지 생성    \r\n@app.post(\"/create/answer\")\r\ndef create_user(item: Item):\r\n    user = asyncio.run(create_user_answer(item))\r\n    return user\r\n\r\nasync def create_user_answer(item: Item) -> None:\r\n    item_dict = item.model_dump()\r\n    db = Prisma()\r\n    await db.connect()\r\n    found = await db.user.find_first(where={'userId': item_dict['userId']})\r\n\r\n    ai_answer = {\r\n            f\"Answer\": send_survey_results(all_sentence, 1)\r\n            # f\"Q{ item_dict['id'] }의 답변 넛지\": send_survey_results(all_sentence)\r\n            }\r\n    ...\r\n\r\n    return ai_answer\r\n    `\r\n\r\n    const openAi = `from langchain.prompts import ChatPromptTemplate, SystemMessagePromptTemplate, HumanMessagePromptTemplate\r\nfrom langchain.schema import SystemMessage, HumanMessage\r\nfrom langchain_openai import ChatOpenAI\r\nimport openai\r\n    \r\n# 설문에 따른 넛지 생성 함수\r\ndef send_survey_results(all_sentence, question_set):\r\n    # OpenAI GPT-3.5 Turbo을 사용하여 챗봇 응답 생성\r\n    # 챗봇 역할 지정\r\n\r\n    if question_set == 1: # question 1~6 요약 > 넛지\r\n        system_message_template = SystemMessagePromptTemplate.from_template(\r\n            template=f\"\"\"너는 최고의 전문 설문 요원 40살 여자 Amy고, 설문에 답하는 친구는 15살 중학생이야....\"\"\" )\r\n        \r\n    elif question_set == 2: # question 7~15 요약 > 넛지\r\n       \r\n    else: # 전체요약 프롬프트 (question 1~21 전체 요약을 JAVA로 보내 줌.)\r\n\r\n    # 사람 입력 데이터 양식\r\n    human_message_template = HumanMessagePromptTemplate.from_template(template=\"{text}\")\r\n\r\n    # 챗봇 프롬프팅\r\n    chat_prompt = ChatPromptTemplate.from_messages([system_message_template, human_message_template])\r\n\r\n    # 모든 질문\r\n    messages = chat_prompt.format_prompt(text=all_sentence).to_messages()\r\n    messages_dict = []\r\n    for message in messages:\r\n        if isinstance(message, SystemMessage):\r\n            messages_dict.append({\"role\": \"system\", \"content\": message.content})\r\n        elif isinstance(message, HumanMessage):\r\n            messages_dict.append({\"role\": \"user\", \"content\": message.content})\r\n   \r\n    # 챗봇 응답 생성 및 번역\r\n    response = openai.chat.completions.create(\r\n        model=\"gpt-4\",\r\n        messages=messages_dict,\r\n        max_tokens=1000,\r\n        n=1,\r\n        stop=None,\r\n        temperature=0.7,\r\n        top_p=1.0,\r\n        frequency_penalty=0.0,\r\n        presence_penalty=0.0\r\n    )\r\n\r\n    chatbot_response = response.choices[0].message.content.strip()\r\n    print(chatbot_response)\r\n    return chatbot_response\r\n`\r\n\r\n    let steps = [\r\n        { name: \"공공데이터 | 설문 넛지\", icon: \"fa-solid fa-gavel\", href: \"#nudge\"},\r\n        { name: \"JAVA Spring X Maria DB \", icon: \"fa-brands fa-java\", href: \"#spring\" },\r\n        { name: \"OpenAI API X Python\", icon: \"fa-brands fa-python\", href: \"#gpt4\"},\r\n    ];\r\n\r\n    let benefits = [\r\n        {\r\n            name: \"설문 내용\",\r\n            description:\r\n                \"공공데이터 포털 (DATA.go.kr)의 한국청소년활동진흥원 설문 문항 정보를 활용하였어요!\",\r\n        },\r\n        {\r\n            name: \"OPEN AI API | GPT-4 X Nudge\",\r\n            description:\r\n                \"설문에 대한 내용을 확인하기 위하여 OPEN AI API | GPT-4를 활용하여 넛지를 줄 수 있어요. 설문자의 설문 의지를 향상시켜 설문 응답 성실도를 높일 수 있어요!\",\r\n        },\r\n        {\r\n            name: \"친근한 UI, 넛지 말투\",\r\n            description:\r\n                \"설문자의 설문 의지를 향상시켜 설문 응답율을 높이기 위하여 청소년에 접근하기 쉬운 UI와 말투를 사용했어요! \",\r\n        },\r\n        {\r\n            name: \"불성실 응답 탐지\",\r\n            description:\r\n                \"아래 논문을 기반으로 하여 AI 프롬프팅을 진행하여 신뢰도 높은 넛지를 주기 위하여 노력했어요.!\",\r\n        },\r\n    ];\r\n\r\n    let surveys = [\r\n                    {\"category\":\"비판적사고(6문항)\",\"question\":\"내가 한 행동이 나중에 어떤 결과를 가져올지 예상할 수 있다\"},\r\n                    {\"category\":\"비판적사고(6문항)\",\"question\":\"나는 어떤 일을 하고 있을 때 그 일의 부분들이 마지막 목표에 어떤 영향을 주는지 알 수 있다\"},\r\n                    {\"category\":\"비판적사고(6문항)\",\"question\":\"나는 다른 사람들이 말을 할 때 앞뒤가 맞는지를 따져본다\"},\r\n                    {\"category\":\"비판적사고(6문항)\",\"question\":\"나는 복잡하고 어려운 글을 읽고 이해하려고 애쓰는 것이 중요하다고 생각한다\"},\r\n                    {\"category\":\"비판적사고(6문항)\",\"question\":\"나는 어떤 사건에 대해 알맞은 근거를 찾아 객관적으로 판단하고 평가한다\"},\r\n                    {\"category\":\"비판적사고(6문항)\",\"question\":\"나는 어떤 의견에 대해서 결정할 때 다양한 방법을 생각하고 판단한다\"},\r\n                    {\"category\":\"의사소통(9문항)\",\"question\":\"나는 친구의 기분을 이해하려고 노력한다 \"},\r\n                    {\"category\":\"의사소통(9문항)\",\"question\":\"나는 친구의 마음(생각과 감정)을 잘 알 수 있다 \"},\r\n                    {\"category\":\"의사소통(9문항)\",\"question\":\"나는 친구들의 고민을 잘 들어 준다 \"},\r\n                    {\"category\":\"의사소통(9문항)\",\"question\":\"나는 친구가 선생님께 칭찬을 받으면 나도 기분이 좋아진다 \"},\r\n                    {\"category\":\"의사소통(9문항)\",\"question\":\"나는 상대방의 표정과 몸짓을 살피면서 속마음을 이해한다 \"},\r\n                    {\"category\":\"의사소통(9문항)\",\"question\":\"나는 대화할 때 이야기를 잘 듣고 있다는 것을 말이나 몸짓으로 보여준다 \"},\r\n                    {\"category\":\"의사소통(9문항)\",\"question\":\"나는 대화를 할 때 어떻게 말할지 미리 생각하고 말한다 \"},\r\n                    {\"category\":\"의사소통(9문항)\",\"question\":\"나는 듣는 사람이 이해할 수 있도록 쉽고 정확한 말을 골라 이야기 한다 \"},\r\n                    {\"category\":\"의사소통(9문항)\",\"question\":\"나는 듣는 사람이 잘 이해할 수 있도록 예를 들어 설명한다\"},\r\n                    {\"category\":\"창의력(6문항)\",\"question\":\"나는 현재에 만족하지 않고 새로운 일에 도전하는 것을 좋아한다 \"},\r\n                    {\"category\":\"창의력(6문항)\",\"question\":\"나는 현실에서 일어날 수 없는 일을 자주 상상한다 \"},\r\n                    {\"category\":\"창의력(6문항)\",\"question\":\"나는 아무생각 없이 같은 일을 계속 반복하는 것을 싫어한다 \"},\r\n                    {\"category\":\"창의력(6문항)\",\"question\":\"나는 친구들에 비해 질문이 많은 편이다\"},\r\n                    {\"category\":\"창의력(6문항)\",\"question\":\"나는 그동안 경험하지 못한 일을 할 기회가 생기면 해보고 싶다\"},\r\n                    {\"category\":\"창의력(6문항)\",\"question\":\"나는 궁금한 것을 못 참는다\"}\r\n                ];\r\n    \r\n    let springMarias = [\r\n                            {\r\n                                name: \"Spring Framework\",\r\n                                description:\r\n                                    \"Spring Framework를 사용하였어요. Spring Security를 사용하여 관리자만 Admin에 접속할 수 있어요!. Http 통신으로 FAST API 서버와 접속하여 넛지 데이터를 가져올 수 있어요!\",\r\n                            },\r\n                            {\r\n                                name: \"Maria DB, JPA, Svelte\",\r\n                                description:\r\n                                    \"Maria DB를 데이터베이스로 하여 JPA를 이용한 통신을 할 수 있어요! API 통신을 통하여 Python AI Server와 접속할 수 있어요! Landing Page를Svelte로 만들었어요!\",\r\n                            },\r\n                        ];\r\n\r\n    let openPythons = [\r\n                            {\r\n                                name: \"FAST API\",\r\n                                description:\r\n                                    \"스프링과의 통신을 위하여 FAST API를 사용하여 AI Server를 만들었어요.\",\r\n                            },\r\n                            {\r\n                                name: \"Lang Chain\",\r\n                                description:\r\n                                    \"Lang Chain으로 OPEN AI | GPT-4가 설문 내용을 감지할 수 있도록 했어요. OPEN AI | GPT-4에게서 받은 넛지를 다시 Spring 서버에 전달할 수 있어요.\",\r\n                            },\r\n                        ];\r\n    let lessons = [\r\n                            {\r\n                                name: \"REST API 활용\",\r\n                                description:\r\n                                    \"JAVA팀과 Python기반으로 학습한 인원들이 서로 협력하여 REST API 기반으로 통신할 수 있는 기술을 배웠어요!\",\r\n                            },\r\n                            {\r\n                                name: \"Lang Chain 활용\",\r\n                                description:\r\n                                \"Lang Chain을 이용하여 설문내용에 대하여 GPT에게 분석할 수 있도록 하는 프롬프팅 기술을 배울 수 있는 계기가 되었어요!\",\r\n                            },\r\n                            {\r\n                                name: \"AI Nudge 활용\",\r\n                                description:\r\n                                    \"OPEN AI API를 이용하여 설문 중간중간마다 AI Nudge를 줄 수 있고 응답 품질 상승을 기대할 수 있을 것 같아요!\",\r\n                            },\r\n                            {\r\n                                name: \"사용자 친화적 UI/UX\",\r\n                                description:\r\n                                    \"고객 수요에 맞는 디자인 요소를 고민하는 등 여러가지 시장 수요에 적합한 프로덕트를 만들 수 있는 계기가 되었어요.\",\r\n                            },\r\n                        ];\r\n</script>\r\n\r\n<main class=\"flex flex-col flex-1 p-4\">\r\n    <section\r\n        id=\"introPage\"\r\n        class=\"grid grid-cols-1 lg:grid-cols-2 gap-10 py-8 sm:py-14\"\r\n    >\r\n        <div\r\n            class=\"flex flex-col lg:justify-center text-center lg:text-left gap-6 md:gap-8 lg:gap-8\"\r\n        >\r\n            <h2 class=\"font-semibold text-4xl sm:text-5xl md:text-6xl\">\r\n                <span class=\"poppins text-violet-400\">AI</span> 를 활용한 설문조사\r\n                \r\n            </h2>\r\n            <span class=\"sunflower fontSignature text-7xl\">&#35; 설문해 U</span>\r\n            <p class=\"text-base sm:text-lg md:text-xl\">\r\n                청소년 활동 참여 청소년을 대상으로 진행할 수 있는 <br /><span class=\"text-orange-300\">3대 역량(비판적 사고, 의사소통, 창의력)</span>에 대한 설문입니다.\r\n                \r\n            </p>\r\n            <p class=\"text-base sm:text-lg md:text-xl\">아래 <span class=\"text-violet-400\">버튼</span> 을 눌러 설문을 시작 해주세요.</p>\r\n            <a\r\n                class=\"blueShadow mx-auto lg:mr-auto lg:ml-0 text-base sm:text-lg md:text-xl poppins\r\n            relative overflow-hidden px-6 py-3 group rounded-full bg-white text-slate-950\r\n            cursor-pointer\"\r\n                href=\"/main\"\r\n            >\r\n                <div\r\n                    class=\"absolute top-0 right-full w-full h-full bg-violet-400 opacity-20 group-hover:translate-x-full z-0 duration-200\"\r\n                ></div>\r\n                <h4 class=\"notokr relative z-9\">설문으로 가기&rarr;</h4>\r\n            </a>\r\n        </div>\r\n        <div class=\"relative shadow-2xl grid place-items-center\">\r\n            <img\r\n                src={\"images/holeman.png\"}\r\n                alt=\"Profile image\"\r\n                class=\"object-scale-down z-[2] max-h-[70vh]\"\r\n            />\r\n        </div>\r\n    </section>\r\n    <section id=\"projects\" class=\"py-20 lg:py-32 flex flex-col gap-24\">\r\n            <div class=\"flex flex-col gap-2 text-center\">\r\n                <h3 class=\"font-semibold text-3xl sm:text-4xl md:text-5xl pb-5\">\r\n                    <span class=\"poppins text-violet-400\">주제 선정 배경</span>\r\n                </h3>\r\n                <div class=\"mt-11 grid lg:grid-cols-6 lg:gap-10\">\r\n                    <div\r\n                    class=\"lg:col-start-2 lg:col-span-4 p-4 sm:p-6 md:p-8 flex flex-col\r\n                    gap-4 rounded-lg border border-solid border-violet-700 text-center group\r\n                    cursor-pointer hover:border-violet-400 duration-200\"\r\n                    >\r\n                    <div\r\n                    class=\"bg-slate-950 grid place-items-center px-4 text-5xl md:text-6xl\r\n                    -mt-10 sm:-mt-12 md:-mt-14 lg:-mt-16 mx-auto duration-200\"\r\n                    >\r\n                    <i class=\"fa-solid fa-object-ungroup\"></i>\r\n                    </div>\r\n                    <div class=\"relative shadow-2xl grid place-items-center rounded-2xl border-2 border-violet-700\">\r\n                        <!-- <WordCloud font={'Noto Sans KR'} words={words} backgroundColor=#4d377b/> -->\r\n                        <img\r\n                        src={\"images/wordcloud2.jpg\"}\r\n                        alt=\"Profile image\"\r\n                        class=\"object-scale-down z-[2] max-h-[70vh] rounded-2xl\"\r\n                    />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </section>\r\n    <section id=\"projects\" class=\"py-20 lg:py-32 flex flex-col gap-24\">\r\n        <div class=\"flex flex-col gap-2 text-center\">\r\n            <h3 class=\"font-semibold text-3xl sm:text-4xl md:text-5xl\">\r\n                프로젝트는 아래<span class=\"poppins text-violet-400\">&nbsp;3단계</span>로 구성 되었어요!\r\n            </h3>\r\n            <a\r\n                href=\"https://github.com/JM-world/aisaProj\"\r\n                target=\"_blank\"\r\n                class=\"mx-auto px-4 py-2 rounded-md border\r\n            border-solid border-white flex items-center gap-2 mb-4 sm:mb-0\r\n            mt-10 hover:border-violet-700 duration-200\"\r\n            >\r\n                <i class=\"fa-regular fa-circle-play\"></i>\r\n                <p>GitHub에서 확인해 보기</p>\r\n            </a>\r\n            <div class=\"mt-11 grid grid-cols-1 lg:grid-cols-3 gap-12 lg:gap-10\">\r\n                <Step step={steps[0]}>\r\n                    <div class=\"text-left\"> &#35; 본 데이터는 공공데이터 포털(한국청소년활동진흥원)에서 제공하는 데이터로 청소년 활동 참여 청소년을 대상으로 진행할 수 있는\r\n                        <strong class=\"fontSignature\"\r\n                            >3대 역량(비판적 사고, 의사소통, 창의력)\r\n                        </strong>에 대한 설문 문항 정보를 이용하였어요.<br />\r\n                        &#35; <strong class=\"fontSignature\">OPEN AI | GPT-4</strong>에게서 받은 <strong class=\"fontSignature\">넛지</strong>\r\n                        를 이용하여 설문자의 설문 의지를 향상시킬 수 있어요!\r\n                    </div>\r\n                </Step>\r\n                <Step step={steps[1]}>\r\n                    <div class=\"text-left\">\r\n                        &#35; 웹 통신용<strong class=\"fontSignature\">Spring Framework</strong>를 사용하였어요.\r\n                        <br />\r\n                        &#35;<strong class=\"fontSignature\"\r\n                            >&nbsp;Spring Security</strong>를 사용하여 관리자만 Admin에 접속할 수 있어요!\r\n                        <br />\r\n                        &#35;&nbsp;<strong class=\"fontSignature\">Maria DB</strong>를 데이터베이스로 하여 \r\n                        &#35;&nbsp;<strong class=\"fontSignature\">JPA</strong>를 이용한 통신을 할 수 있어요!\r\n                        <br />\r\n                        &#35;&nbsp;<strong class=\"fontSignature\">API 통신</strong>을 통하여 Python AI Server와 접속할 수 있어요!\r\n                        <br />\r\n                        &#35; Landing Page를&nbsp;<strong class=\"fontSignature\">Svelte</strong>로 만들었어요!\r\n                    </div>\r\n                </Step>\r\n                <Step step={steps[2]}>\r\n                    <div class=\"text-left\">\r\n                        &#35; 스프링과의 통신을 위하여 <strong class=\"fontSignature\">FAST API</strong>를 사용하여 AI Server를 만들었어요.\r\n                        <br />\r\n                        &#35;<strong class=\"fontSignature\"\r\n                            >&nbsp;Lang Chain</strong>으로 <strong class=\"fontSignature\">OPEN AI | GPT-4</strong>가 설문 내용을 감지할 수 있도록 했어요.\r\n                        <br />\r\n                        &#35;&nbsp;<strong class=\"fontSignature\">OPEN AI | GPT-4</strong>에게서 받은 <strong class=\"fontSignature\">넛지</strong>를 다시 Spring 서버에 전달할 수 있어요.\r\n                    </div>\r\n                </Step>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <section id=\"projects\" class=\"py-20 lg:py-32 flex flex-col gap-24\">\r\n        <div class=\"flex flex-col gap-2 text-center\">\r\n            <h3 class=\"font-semibold text-3xl sm:text-4xl md:text-5xl pb-5\">\r\n                <span class=\"poppins text-violet-400\">System Architecture</span>\r\n            </h3>\r\n            <div class=\"mt-11 grid lg:grid-cols-6 lg:gap-10\">\r\n                <div\r\n                class=\"lg:col-start-2 lg:col-span-4 p-4 sm:p-6 md:p-8 flex flex-col\r\n                gap-4 rounded-lg border border-solid border-violet-700 text-center group\r\n                cursor-pointer hover:border-violet-400 duration-200\"\r\n                >\r\n                <div\r\n                class=\"bg-slate-950 grid place-items-center px-4 text-5xl md:text-6xl\r\n                -mt-10 sm:-mt-12 md:-mt-14 lg:-mt-16 mx-auto duration-200\"\r\n                >\r\n                <i class=\"fa-solid fa-diagram-project\"></i>\r\n                </div>\r\n                <div class=\"relative shadow-2xl grid place-items-center rounded-2xl border-2 border-violet-700\">\r\n                    <img\r\n                        src={\"images/systemArchitecture.png\"}\r\n                        alt=\"Profile image\"\r\n                        class=\"object-scale-down z-[2] max-h-[70vh] rounded-2xl\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </section>\r\n    <section\r\n        id=\"nudge\"\r\n        class=\"py-20 pt-10 lg:py-32 flex flex-col gap-16 sm:gap-20 md:gap-24 relative\"\r\n    >\r\n        <div\r\n            class=\"flex flex-col gap-2 text-center relative before:relative before:top-0\r\n        before:left-0 before:w-2/3 before:h-1.5 before:bg-violet-700 after:absolute after:bottom-0\r\n        after:right-0 after:w-2/3 after:h-1.5 after:bg-violet-700 py-4\"\r\n        >\r\n            <h6 class=\"text-lg sm:text-xl md:text-2xl\"><strong class=\"text-violet-400\">공공데이터</strong>를 기반한 <strong class=\"text-violet-400\">청소년</strong> 대상 설문</h6>\r\n            <h3 class=\"font-semibold text-3xl sm:text-4xl md:text-5xl\">\r\n                <span class=\"poppins text-violet-400\">넛지</span>를 이용한 설문 응답 품질 향상!!\r\n            </h3>\r\n        </div>\r\n        \r\n        <div class=\"flex flex-col gap-20 w-full mx-auto max-w-[800px]\">\r\n            {#each benefits as benefit, index}\r\n                <div class=\"flex gap-6 sm:gap-8\">\r\n                    <p\r\n                        class=\"poppins text-4xl sm:text-5xl md:text-6xl text-slate-500\r\n                    font-semibold\"\r\n                    >\r\n                        {index + 1}\r\n                    </p>\r\n                    <div class=\"flex flex-col gap-6 sm:gap-8\">\r\n                        <h5 class=\"text-2xl sm:text-3xl md:text-5xl\">\r\n                            {benefit.name}\r\n                        </h5>\r\n                        <p class=\"text-sm sm:text-sm md:text-lg\">{benefit.description}</p>\r\n                        {#if index == 1}\r\n                        <div class=\"relative shadow-2xl grid place-items-center\">\r\n                            <img\r\n                                src={\"images/nudgeBook01.jpg\"}\r\n                                alt=\"Profile image\"\r\n                                class=\"object-scale-down z-[2] max-h-[70vh]\"\r\n                            />\r\n                        </div>\r\n                        {/if}\r\n                        {#if index == 0}\r\n                        <div class=\"flex flex-col gap-10 max-w-[800px] mx-auto w-full rounded-2xl border-2 border-violet-700\">\r\n                            <table class=\"table-auto bg-white text-slate-700 border-2 border-violet-700 text-center\">\r\n                                <caption class=\"caption-top text-slate-200 pt-4 pb-4\">\r\n                                    Table 1: 한국청소년활동진흥원_설문 문항 정보_20221231\r\n                                </caption>\r\n                                <caption class=\"caption-bottom text-slate-200 pt-2 pb-2 text-right\">\r\n                                    출처:\r\n                                    <a class=\"hover:text-violet-300\" \r\n                                    href=\"https://www.data.go.kr/data/15121201/fileData.do#tab-layer-openapi\" \r\n                                    target=\"_blank\">공공데이터 포털(DATA.go.kr)&nbsp;</a>\r\n                                </caption>\r\n                                <thead class=\"border-b border-solid border-slate-200\">\r\n                                    <tr>\r\n                                        <th class=\"whitespace-nowrap bg-violet-700 p-2 px-4 text-white\">No</th>\r\n                                        <th class=\"whitespace-nowrap bg-violet-700 p-2 px-4 text-white \">구분</th>\r\n                                        <th class=\"whitespace-nowrap bg-violet-700 p-4 px-8 text-white\">\r\n                                            질문\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody class=\"text-left\">\r\n                                    {#each surveys.slice(0, 6) as survey, index}\r\n                                        <tr class=\"border-b border-solid border-slate-200\">\r\n                                            <td class=\"text-center\">{index + 1}</td>\r\n                                            {#if index == 0}\r\n                                                <td rowspan=\"6\"\r\n                                                    class=\"border-r border-solid border-white pl-4 pr-8 py-4 font-semibold\r\n                                                text-sm bg-slate-100 text-center\">{surveys[0].category.slice(0,3)}<br />{surveys[0].category.slice(3,5)}<br />{surveys[0].category.slice(5)}</td\r\n                                                >\r\n                                            {/if}\r\n                                            \r\n                                                <td>{survey.question}</td\r\n                                                >\r\n                                            </tr>\r\n                                    {/each}\r\n                                    {#each surveys.slice(6, 15) as survey, index}\r\n                                        <tr class=\"border-b border-solid border-slate-200\">\r\n                                            <td class=\"text-center\">{index + 7}</td>\r\n                                            {#if index == 0}\r\n                                                <td rowspan=\"9\"\r\n                                                    class=\"border-r border-solid border-white pl-4 pr-8 py-4 font-semibold\r\n                                                text-sm bg-slate-100 text-center\">{surveys[6].category.slice(0,2)}<br />{surveys[6].category.slice(2,4)}<br />{surveys[6].category.slice(4)}</td\r\n                                                >\r\n                                            {/if}\r\n                                                <td>{survey.question}</td\r\n                                                >\r\n                                        </tr>\r\n                                    {/each}\r\n                                    {#each surveys.slice(15, 21) as survey, index}\r\n                                        <tr class=\"border-b border-solid border-slate-200\">\r\n                                            <td class=\"text-center\">{index + 16}</td>\r\n                                            {#if index == 0}\r\n                                                <td rowspan=\"9\"\r\n                                                    class=\"border-r border-solid border-white pl-4 pr-8 py-4 font-semibold\r\n                                                text-sm bg-slate-100 text-center\">{surveys[15].category.slice(0,3)}<br />{surveys[15].category.slice(3)}</td\r\n                                                >\r\n                                            {/if}\r\n                                                <td>{survey.question}</td\r\n                                                >\r\n                                        </tr>\r\n                                    {/each}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    {/if}\r\n                    {#if index == 3}\r\n                    <div class=\"flex flex-col gap-10 max-w-[800px] mx-auto w-full rounded-2xl border-2 border-violet-700\">\r\n                        <table class=\"table-auto bg-white text-slate-700 border-2 border-violet-700 text-center\">\r\n                            <caption class=\"caption-top text-slate-200 pt-4 pb-4\">\r\n                                Table 2: 불성실 응답의 유형별 분류 의미 및 예시\r\n                            </caption>\r\n                            <caption class=\"caption-bottom text-slate-200 pt-2 pb-2 text-right\">\r\n                                출처:\r\n                                <a class=\"hover:text-violet-300\" \r\n                                href=\"http://kmr.kasba.or.kr/xml/25318/25318.pdf\" \r\n                                target=\"_blank\">Korean Management Review(http://kmr.kasba.or.kr)&nbsp;</a>\r\n                            </caption>\r\n                            <tbody class=\"text-center\">\r\n                                <tr class=\"border-b border-solid border-slate-200\">\r\n                                    <td class=\"text-center flex justify-center\">\r\n                                        <img\r\n                                        src={\"images/responding.png\"}\r\n                                        alt=\"Profile image\"\r\n                                        class=\"object-scale-down z-[2] max-h-[70vh]\"\r\n                                    />\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    {/if}\r\n                    </div>\r\n                </div>\r\n            {/each}\r\n        </div>\r\n        \r\n    </section>\r\n    <section\r\n        id=\"spring\"\r\n        class=\"py-20 pt-10 lg:py-32 flex flex-col gap-16 sm:gap-20 md:gap-24 relative\"\r\n    >\r\n        <div\r\n            class=\"flex flex-col gap-2 text-center relative before:relative before:top-0\r\n        before:left-0 before:w-2/3 before:h-1.5 before:bg-violet-700 after:absolute after:bottom-0\r\n        after:right-0 after:w-2/3 after:h-1.5 after:bg-violet-700 py-4\"\r\n        >\r\n            <div class=\"flex flex-row justify-center\">\r\n                <div>\r\n                    <h3 class=\"font-semibold text-3xl sm:text-4xl md:text-5xl pt-4 pb-4\">\r\n                        <span class=\"poppins text-violet-400\">Spring</span>을 기반한 <strong class=\"text-violet-400\">WAS</strong> Server\r\n                    </h3>\r\n                </div>\r\n                <div class=\"hidden sm:block\">\r\n                    <button\r\n                    class=\"ml-auto rounded-full aspect-square bg-slate-300\r\n                    text-violet-400 sm:px-3 sm:ms-1 hover:bg-slate-800 cursor-pointer\"\r\n                    >\r\n                        <img class=\"h-7\" src=\"images/svelte.svg\">\r\n                    </button>\r\n                    <button\r\n                    class=\"ml-auto rounded-full aspect-square bg-cyan-400\r\n                    text-violet-400 sm:px-3 sm:ms-1 hover:bg-slate-800 cursor-pointer\"\r\n                    >\r\n                        <img class=\"h-7\" src=\"images/tailwindcss.svg\">\r\n                    </button>\r\n                    <button\r\n                    class=\"ml-auto rounded-full aspect-square bg-green-500\r\n                    text-violet-400 sm:px-3 sm:ms-1 hover:bg-slate-800 cursor-pointer\"\r\n                    >\r\n                        <img class=\"h-7\" src=\"images/springboot.svg\">\r\n                    </button>\r\n                    <button\r\n                    class=\"ml-auto rounded-full aspect-square bg-blue-500\r\n                    text-violet-400 sm:px-3 sm:ms-1 hover:bg-slate-800 cursor-pointer\"\r\n                    >\r\n                        <img class=\"h-7\" src=\"images/mariadbfoundation.svg\">\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"flex flex-col gap-20 w-full mx-auto max-w-[800px]\">\r\n            {#each springMarias as maria, index}\r\n                <div class=\"flex gap-6 sm:gap-8\">\r\n                    <p\r\n                        class=\"poppins text-4xl sm:text-5xl md:text-6xl text-slate-500\r\n                    font-semibold\"\r\n                    >\r\n                        {index + 1}\r\n                    </p>\r\n                    <div class=\"flex flex-col gap-6 sm:gap-8\">\r\n                        <h3 class=\"text-2xl sm:text-3xl md:text-5xl\">\r\n                            {maria.name}\r\n                        </h3>\r\n                        <p class=\"text-sm sm:text-sm md:text-lg\">{maria.description}</p>\r\n                    </div>\r\n                </div>\r\n                {#if index == 0}\r\n                    <pre><h5>SecurityConfig.java</h5><code class=\"language-java\">{securityAdmin}</code></pre>\r\n                    <pre><h5>MainController.java</h5><code class=\"language-java\">{postMapping}</code></pre>\r\n                {/if}\r\n                {#if index == 1}\r\n                    <pre><h5>AdminService.java</h5><code class=\"language-java\">{jpaMaria}</code></pre>\r\n                    <div>\r\n                        <h5>Spring folder</h5>\r\n                        <img  src={\"images/svelte.png\"}\r\n                            alt=\"Profile image\"\r\n                            class=\"object-cover z-[2] max-h-[70vh]\" />\r\n                    </div>\r\n                <pre><h5>index.html</h5><code class=\"language-html\">{svelteJava}</code></pre>\r\n                    \r\n                {/if}\r\n            {/each}\r\n        </div>\r\n    </section>\r\n\r\n    <section\r\n        id=\"gpt4\"\r\n        class=\"py-20 pt-10 lg:py-32 flex flex-col gap-16 sm:gap-20 md:gap-24 relative\"\r\n    >\r\n        <div\r\n            class=\"flex flex-col gap-2 text-center relative before:relative before:top-0\r\n        before:left-0 before:w-2/3 before:h-1.5 before:bg-violet-700 after:absolute after:bottom-0\r\n        after:right-0 after:w-2/3 after:h-1.5 after:bg-violet-700 py-4\"\r\n        >\r\n            <div class=\"flex justify-center\">\r\n                <h3 class=\"font-semibold text-3xl sm:text-4xl md:text-5xl pb-4 pt-4\">\r\n                    <span class=\"poppins text-violet-400\">Fast API</span>를 이용한 OPEN AI API와 Spring 서버 연결!\r\n                </h3>\r\n            </div>\r\n            <div class=\"hidden sm:block\">\r\n                <button\r\n                class=\"ml-auto rounded-full aspect-square bg-emerald-700\r\n                text-violet-400 sm:px-3 sm:ms-1 hover:bg-slate-800 cursor-pointer\"\r\n                >\r\n                    <img class=\"h-7\" src=\"images/fastapi.svg\">\r\n                </button>\r\n                <button\r\n                class=\"ml-auto rounded-full aspect-square bg-sky-300\r\n                text-violet-400 sm:px-3 sm:ms-1 hover:bg-slate-800 cursor-pointer\"\r\n                >\r\n                    <img class=\"h-7\" src=\"images/openai.svg\">\r\n                </button>\r\n                <button\r\n                class=\"ml-auto rounded-full aspect-square bg-sky-500\r\n                text-violet-400 sm:px-3 sm:ms-1 hover:bg-slate-800 cursor-pointer\"\r\n                >\r\n                    <img class=\"h-7\" src=\"images/python.svg\">\r\n                </button>\r\n                <button\r\n                class=\"ml-auto rounded-full aspect-square bg-blue-500\r\n                text-violet-400 sm:px-3 sm:ms-1 hover:bg-slate-800 cursor-pointer\"\r\n                >\r\n                    <img class=\"h-7\" src=\"images/mariadbfoundation.svg\">\r\n                </button>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"flex flex-col gap-20 w-full mx-auto max-w-[800px]\">\r\n            {#each openPythons as python, index}\r\n                <div class=\"flex gap-6 sm:gap-8\">\r\n                    <p\r\n                        class=\"poppins text-4xl sm:text-5xl md:text-6xl text-slate-500\r\n                    font-semibold\"\r\n                    >\r\n                        {index + 1}\r\n                    </p>\r\n                    <div class=\"flex flex-col gap-6 sm:gap-8\">\r\n                        <h3 class=\"text-2xl sm:text-3xl md:text-5xl\">\r\n                            {python.name}\r\n                        </h3>\r\n                        <p class=\"text-sm sm:text-sm md:text-lg\">{python.description}</p>\r\n                    </div>\r\n                </div>\r\n                {#if index == 0}\r\n                    <pre><h5>main.py</h5><code class=\"language-python\">{fastApi}</code></pre>\r\n                {/if}\r\n                {#if index == 1}\r\n                    <pre><h5>main.py</h5><code class=\"language-python\">{openAi}</code></pre>\r\n                {/if}\r\n            {/each}\r\n        </div>\r\n    </section>\r\n    <section\r\n        id=\"lessonLearned\"\r\n        class=\"py-20 pt-10 lg:py-32 flex flex-col gap-16 sm:gap-20 md:gap-24 relative\"\r\n    >\r\n        <div\r\n            class=\"flex flex-col gap-2 text-center relative before:relative before:top-0\r\n        before:left-0 before:w-2/3 before:h-1.5 before:bg-violet-700 after:absolute after:bottom-0\r\n        after:right-0 after:w-2/3 after:h-1.5 after:bg-violet-700 py-4\"\r\n        >\r\n            <h3 class=\"font-semibold text-3xl sm:text-4xl md:text-5xl pb-4 pt-4\">\r\n                <span class=\"poppins text-violet-400\">Lesson Learned</span>\r\n            </h3>\r\n        </div>\r\n        \r\n        <div class=\"flex flex-col gap-20 w-full mx-auto max-w-[800px]\">\r\n            {#each lessons as lesson, index}\r\n                <div class=\"flex gap-6 sm:gap-8\">\r\n                    <p\r\n                        class=\"poppins text-4xl sm:text-5xl md:text-6xl text-slate-500\r\n                    font-semibold\"\r\n                    >\r\n                        {index + 1}\r\n                    </p>\r\n                    <div class=\"flex flex-col gap-6 sm:gap-8\">\r\n                        <h3 class=\"text-2xl sm:text-3xl md:text-5xl\">\r\n                            {lesson.name}\r\n                        </h3>\r\n                        <p class=\"text-sm sm:text-sm md:text-lg\">{lesson.description}</p>\r\n                    </div>\r\n                </div>\r\n            {/each}\r\n        </div>\r\n    </section>\r\n\r\n    <section id=\"techStack\" class=\"py-20 lg:py-32 flex flex-col gap-24\">\r\n        <div\r\n        class=\"flex flex-col gap-2 text-center relative before:relative before:top-0\r\n        before:left-0 before:w-2/3 before:h-1.5 before:bg-violet-700 after:absolute after:bottom-0\r\n        after:right-0 after:w-2/3 after:h-1.5 after:bg-violet-700 py-4\"\r\n        >\r\n            <h3 class=\"font-semibold text-3xl sm:text-4xl md:text-5xl pb-4 pt-4\">\r\n                <span class=\"poppins text-violet-400\">기술 Stack</span>\r\n            </h3>\r\n        </div>\r\n        <div class=\"mt-11 grid lg:grid-cols-6 lg:gap-10\">\r\n            <div\r\n            class=\"lg:col-start-2 lg:col-span-4 p-4 sm:p-6 md:p-8 flex flex-col\r\n            gap-4 rounded-lg border border-solid border-violet-700 text-center group\r\n            cursor-pointer hover:border-violet-400 duration-200\"\r\n            >\r\n                <div\r\n                class=\"bg-slate-950 grid place-items-center px-4 text-5xl md:text-6xl\r\n                -mt-10 sm:-mt-12 md:-mt-14 lg:-mt-16 mx-auto duration-200\"\r\n                >\r\n                <i class=\"fa-solid fa-chalkboard-user\"></i>\r\n                </div>\r\n                <div class=\"flex flex-col\">\r\n                    <div class=\"flex flex-row justify-center\">\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Svelte-FF3E00?style=for-the-badge&logo=Svelte&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/FastAPI-000000?style=for-the-badge&logo=FastAPI&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Tailwindcss-79EDFF?style=for-the-badge&logo=tailwindcss&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Spring Security-6DB33F?style=for-the-badge&logo=Spring Security&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Chart.js-FF6384?style=for-the-badge&logo=Chart.js&logoColor=white\">\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"flex flex-row justify-center\">\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Java-007396?style=for-the-badge&logo=Java&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=Python&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/MariaDB-F80000?style=for-the-badge&logo=mariadb&logoColor=white\">\r\n                        </div>\r\n\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Thymeleaf-005F0F?style=for-the-badge&logo=Thymeleaf&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/jQuery-0769AD?style=for-the-badge&logo=jQuery&logoColor=white\">\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div class=\"flex flex-row justify-center\">\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/OpenAI-412991?style=for-the-badge&logo=OpenAI&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Spring Boot-6DB33F?style=for-the-badge&logo=Spring Boot&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Bootstrap-7952B3?style=for-the-badge&logo=Bootstrap&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/HTML5-E34F26?style=for-the-badge&logo=HTML5&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/CSS3-1572B6?style=for-the-badge&logo=CSS3&logoColor=white\">\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"flex flex-row justify-center\">\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Javascript-F7DF1E?style=for-the-badge&logo=Javascript&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Font Awesome-528DD7?style=for-the-badge&logo=Font Awesome&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Git-F05032?style=for-the-badge&logo=Git&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Github-181717?style=for-the-badge&logo=Github&logoColor=white\">\r\n                        </div>\r\n                        <div>\r\n                            <img class=\"h-10\" src=\"https://img.shields.io/badge/Discord-5865F2?style=for-the-badge&logo=Discord&logoColor=white\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</main>\r\n","<script>\r\n    import \"./app.css\";\r\n    import Footer from \"./Footer.svelte\";\r\n    import Header from \"./Header.svelte\";\r\n    import Main from './Main.svelte';\r\n\r\n    let y;\r\n    let innerHeight = 0;\r\n    let innerWidth = 0;\r\n\r\n    function goTop() {\r\n        document.body.scrollIntoView();\r\n    }\r\n</script>\r\n\r\n<div\r\n    class=\"relative flex flex-col max-w-[1400px] mx-auto w-full text-sm\r\nsm:text-base min-h-screen\"\r\n>\r\n    <div\r\n        class={\"fixed bottom-0 w-full duration-200 flex p-10 z-[10] \" +\r\n            (y > 0\r\n                ? \" opacity-full pointer-events-auto\"\r\n                : \" pointer-events-none opacity-0\")}\r\n    >\r\n        <button\r\n            on:click={goTop}\r\n            class=\"ml-auto rounded-full aspect-square bg-slate-900\r\n        text-violet-400 px-3 sm:px-4 hover:bg-slate-800 cursor-pointer\"\r\n        >\r\n            <i\r\n                class=\"fa-solid fa-arrow-up grid place-items-center aspect-square\"\r\n            />\r\n        </button>\r\n    </div>\r\n    <Header {y} />\r\n    <Main />\r\n    <Footer />\r\n</div>\r\n\r\n<svelte:window bind:scrollY={y} bind:innerHeight bind:innerWidth />","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n    // ここでbodyを指定しているから特にdivとかを書かなくて良い\r\n    \r\n    target: document.body,\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","callback","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","create_component","mount_component","customElement","m","new_on_destroy","map","filter","on_destroy","destroy_component","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","keys","footer","t0_value","link","header","a0","div0","a1","y","t1_value","slot_ctx","i_class_value","icon","a_href_value","href","h3","div2","current","set_data","t1","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","undefined","merged","len","Math","max","step","div","t3_value","question","if_block","category","t2_value","td","br0","br1","create_if_block_8","tr","td0","td1","create_if_block_7","br","create_if_block_6","t4_value","description","if_block0","create_if_block_9","if_block1","each_value_6","each_value_5","each_value_4","table","caption0","caption1","thead","tbody","create_if_block_5","if_block2","create_if_block_4","div1","p0","h5","p1","pre0","h50","code0","pre1","h51","code1","create_if_block_3","h52","create_if_block_2","pre","code","create_if_block_1","create_if_block","main","section0","section1","section2","div9","h31","div8","section3","section4","div15","div16","section5","div20","div21","section6","div24","div25","section7","div26","div27","section8","hljs","highlightAll","button","goTop","body","scrollIntoView","innerHeight","innerWidth"],"mappings":"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","x_google_ignoreList":[0]}